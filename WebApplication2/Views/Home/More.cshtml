@using System.Web.Mvc
@using WebApplication2.Models
@model IEnumerable<WebApplication2.Models.Map>
@{
    ViewBag.Title = "More";
}

<!DOCTYPE html>

<html>
<head>
    
    <title>More</title>
    <script src="http://maps.google.com/maps/api/js?key=AIzaSyC8TF84rMeM23APPcGQ2zUCVN1eINtxotU&sensor=true" type="text/javascript"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=drawing,geometry"></script>
    <script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
    <style>
        #map_canvas img {
            max-width: none;
        }
    </style>

    <!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
    <style>
        .infoDiv {
            height: 100px;
            width: 200px;
            -webkit-user-select: none;
            background-color: white;
        }
    </style>
     
</head>
<body>
    <h2>@ViewBag.Title</h2>
    <h3>@ViewBag.Message</h3>
    <div id="map_canvas" style="height: 600px;"></div>
    @section scripts {
    <section class="scripts">
        <script type="text/javascript">
            // our code will go in here...


            $(document).ready(function () {
                Initialize();
            });

            function Initialize() {

                // Google has tweaked their interface somewhat - this tells the api to use that new UI
                google.maps.visualRefresh = true;
                var Greece = new google.maps.LatLng(39.074208,  21.824312);

                // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
                var mapOptions = {
                    zoom: 7,
                    center: Greece,
                    mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP,
                    
                };

                // This makes the div with id "map_canvas" a google map
                var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

                // This shows adding a simple pin "marker" - this happens to be the Tate Gallery in Liverpool!
                var myLatlng = new google.maps.LatLng(39.074208, 21.824312);

                var marker = new google.maps.Marker({
                    position: myLatlng,
                    map: map,
                    title: 'Tate Gallery'
                });

                // You can make markers different colors...  google it up!
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')

                // a sample list of JSON encoded data of places to visit in Liverpool, UK
                // you can either make up a JSON list server side, or call it from a controller using JSONResult

                var data = @Html.Raw(Json.Encode(Model));
                   
                 // statikaaaa   { "PlaceName": "My house", "OpeningHours": "unlimited", "GeoLong": "24.418074", "GeoLat": "40.939261", "Comments": "Here lives the myth" }, ];


                // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
                $.each(data, function (i, item) {
                         var marker = new google.maps.Marker({
                             'position': new google.maps.LatLng(item.Latitude, item.Longitude),
                        'map': map,
                        'title': item.Name
                    });

                     // Make the marker-pin blue!
                     marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                    // put in some information about each json object - in this case, the opening hours.
                     var infowindow = new google.maps.InfoWindow({
                         content: "<div class='infoDiv'><h2>" + item.Name + "</h2>" +  "</h4></div><h3>" + item.Description + "</h3></div>"
                    });

                    // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                    google.maps.event.addListener(marker, 'click', function () {
                     infowindow.open(map, marker);
                 });

                 })
            }

        </script>
    </section>
    }
</body>
</html>
