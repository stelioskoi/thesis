
@model PagedList.IPagedList<WebApplication2.Models.BlogViewModel>
@using PagedList.Mvc;
@using  WebApplication2.Controllers
<link href="~/Content/PagedList.css" rel="stylesheet" />

@{ 

    BlogController blogCtrl = new BlogController();
} 



<div style="overflow:hidden;width:100%;">
    <table style="float:right;">
        <tr>
            <th>Sort by :</th>
         
            <th class="tableTitle">
                @using (Html.BeginForm("Index", "Blog", FormMethod.Get))
            {
                if (ViewBag.CurrentSearchCategory != null)
                {
                    foreach (var item in ViewBag.CurrentSearchCategory)
                    {
                            <input type="hidden" name="searchCategory" value="@item" />
                        }
                    }
                    if (ViewBag.CurrentSearchTag != null)
                    {
                        foreach (var item in ViewBag.CurrentSearchTag)
                        {
                            <input type="hidden" name="searchTag" value="@item" />
                        }
                    }
                    <input type="hidden" name="searchString" value="@ViewBag.CurrentSearchString" />
                    <input type="hidden" name="sortOrder" value="@ViewBag.TitleSortParm" />
                    <input class="submitBtnLink" type="submit" value="Title" />
                }
            </th>
        </tr>
    </table>
</div>
@foreach (var post in Model)
{
    <div class="postsTable">
    <div class="postPubData">
        <div>@post.PostedOn.ToShortDateString()</div>
     </div>    
        <a href="#">
        <div class="postDescTitle"><h3>@Html.ActionLink(@post.Title, "Post", "Blog", new { slug = @post.UrlSlug }, null)</h3></div>
        </a>
        
        <div class="postDescCategory">
            <label>Category:&nbsp;</label>
            @{
                var postCats = blogCtrl.GetPostCategories(post.Post);
                int postcatnum = 0;
                foreach (var cat in postCats)
                {
                    postcatnum++;
                    <a href="#">
                        <div class="postDescCatNames">
                            @cat.Name@if (postcatnum < postCats.Count())
                            {
                                @Html.Raw(",&nbsp;")
                            }
                        </div>
                    </a>
                }
            }
        </div>

        <div class=" postDescBody">
            @{
                var postImages = blogCtrl.GetPostImages(post.Post);
                if (postImages != null)
                {
                    <div class="postVidCont">
                       
                        @foreach (var image in postImages)
                        {
                                
                            <img src="~/BlogImages/PostImages/@image.Imagename" height="100 " width="200" />
                        }
                    </div>
                }
            }
            @Html.Raw(post.ShortDescription)
            @Html.ActionLink("Read More...", "Post", "Blog", new { slug = @post.UrlSlug }, null)
        </div>

    </div>

}

<div id="spacer"></div>

<div class="paging">
   
     <div class="pagenum">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
    
    @{
        List<string> searchCatList = new List<string>();
        List<string> searchTagList = new List<string>();
        if (ViewBag.CurrentSearchCategory != null)
        {
            foreach (var item in ViewBag.CurrentSearchCategory)
            {
                searchCatList.Add(item);
            }
        }
        if (ViewBag.CurrentSearchTag != null)
        {
            foreach (var item in ViewBag.CurrentSearchTag)
            {
                searchTagList.Add(item);
            }
        }
    }
    @if (ViewBag.CurrentSearchCategory != null || ViewBag.CurrentSearchTag != null)
    {
        @Html.PagedListPager(Model, page => Url.Action("Index", "Blog", new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.SearchString }) + "?" + string.Join("&", searchCatList.Select(x => "searchCategory=" + x)) + "&" + string.Join("&", searchTagList.Select(x => "searchTag=" + x)))
    }
    else
    {
        @Html.PagedListPager(Model, page => Url.Action("Index", "Blog", new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.SearchString }))
    }
</div>
