@using WebApplication2.Models
@model WebApplication2.Models.ContactModel


@{
    ViewBag.Title = "ContactForm";

}
<style>
    a {
        color: white;
    }

    .alert {
        margin-top: 5%;
    }
    thead {
    font-weight:900;
    }
      h2 {
    text-align:center;
    }
    .table-bordered {
    margin-bottom:100px;
    margin-top:100px;
    
    }
</style>
@Scripts.Render("~/bundles/jqueryval")
@*<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/bootstrap.css" rel="stylesheet" />*@
@if (TempData["notice"] != null)
{
    <div class="alert alert-dismissible alert-success">
        <button type="button" class="close" data-dismiss="alert">×</button>
        <strong>Well done!</strong> You successfully applied  <a href="#" class="alert-link">on this job </a>.
    </div>
}
@if (TempData["check_db"] != null)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="close" data-dismiss="alert">×</button>
        <strong>Sorry!</strong> You already applied  <a href="#" class="alert-link">on this job pla</a>.
    </div>
}
<h2 >Job places</h2>
     <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <td>Work Position Name</td>
                    <td>Requirements</td>
                    <td style=" width:30%">General information</td>
                    <td>Apply now</td>
                </tr>
            </thead>

            <tbody>
@foreach (var item in ViewData["JobDisplay"] as List<postjob>)
{
                <tr>
                    <td class="job_name">@item.Name</td>
                    <td>
                      @Html.Raw(@item.Req)
                    </td>
                    <td>@Html.Raw(@item.Des)</td>
                    <td><button type="button" class="btn btn-success"  data-toggle="modal" data-target="#myModal">Apply</button></td>
                </tr>

}
            </tbody>

        </table>

    <div class="modal" id="myModal" @*title="Job apply form"*@ role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title">Modal title</h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("SaveDataContact", "Contact", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {


                        @*@Html.ValidationSummary();*@
                        @Html.AntiForgeryToken();

                        @Html.HiddenFor(model => model.nameofjob, new { id = "njob" })

                        @Html.LabelFor(model => model.FirstName)<br />
                        @Html.TextBoxFor(model => model.FirstName, new { id = "inputError", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FirstName)<br />


                        @Html.LabelFor(model => model.LastName)<br />
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LastName)<br />


                        @Html.LabelFor(model => model.Age)<br />
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Age)<br />


                        @Html.LabelFor(model => model.Email)<br />
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email)<br />

                        @Html.LabelFor(model => model.Comments)<br />
                        @Html.TextAreaFor(model => model.Comments, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Comments)<br />



                        <label for="file">Upload your Cv:</label>
                        @Html.TextBoxFor(m => m.file, new { type = "file", name = "file", id = "fileupload", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.file)<br />

                        //Το label σε αυ΄τη τη περίπτωση είναι ένα κρυφό πεδίο το οποίο το χρησιμοποούμε για το  validation το οποίο θα γίνει με jquery
                        <label id="fileStatus" Text="" class="error"></label><br />
                        <input type="submit" name="Submit" id="Submit" value="Upload" class="btn btn-success" />

                    }
                </div>



            </div>
        </div>
    </div>


    <script>
        $(document).ready(function () {
            $("#submit").hover(function () {
                $(this).css("background-color", "yellow");
            }, function () {
                $(this).css("background-color", "");
            });


            $("#fileupload").change(function () {

                // βρίσκουμε ρο αρχέιο 
                var ext = $(this).val().split('.').pop().toLowerCase();

                // αρχείο πίνακα για να δώσουμε τα είδη αρχείου που δεχόμαστε
                var fileListToUpload = new Array('pdf', 'txt', 'doc', 'docx', 'xls', 'xlsx');

                //έλεγχος του αρχείου πίνακα
                var isValidFile = $.inArray(ext, fileListToUpload);

                // λειτουργία άν δεν είναι σωστό 
                if (isValidFile == -1) {
                    ShowMessage('Please select a valid file of type pdf/txt/doc/docx/xls/xlsx.', 'error');
                    $(this).replaceWith($(this).val('').clone(true));
                }
                else {
                    // εδώ θέτουμε το μέγιστο μέγεθος του αρχείου
                    if ($(this).get(0).files[0].size > (1024 * 1024 * 10)) {
                        ShowMessage('File size should not exceed 10MB.', 'error');
                        $(this).replaceWith($(this).val('').clone(true));
                    }
                    else {
                        ShowMessage('Thank you for selecting a valid file.', 'success');
                    }
                }

            });
            function ShowMessage(message, type) {

                if (type == 'success') {
                    $("#fileStatus").removeClass('error');
                    $("#fileStatus").addClass('success');
                }
                else if (type == 'error') {
                    $("#fileStatus").removeClass('success');
                    $("#fileStatus").addClass('error');
                }
                $("#fileStatus").text(message);
            }

        });
       

        $("button").on("click", function () {
            var jobname = $(this).closest('tr').find("td:first-child").text();
            $('#njob').val(jobname);
        })


    </script>

